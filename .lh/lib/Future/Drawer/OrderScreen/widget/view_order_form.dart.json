{
    "sourceFile": "lib/Future/Drawer/OrderScreen/widget/view_order_form.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1723887746941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723888264192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n                         context.read<OrdersCubit>().selectedOrderStatus,\n                     items: context.read<OrdersCubit>().item,\n                     displayItem: (val) => val,\n                     onChanged: (newValue) {\n-                      context.read<OrdersCubit>().updatestatus(newValue ?? '');\n+                      context.read<OrdersCubit>().updateStatus(newValue ?? '');\n                     },\n                     validator: (value) {\n                       validator(value, 'Please select status');\n                       return null;\n"
                },
                {
                    "date": 1723888836009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n           ],\n         ),\n         child: Form(\n           key: context.read<OrdersCubit>().orderFormKey,\n+          autovalidateMode:context.read<OrdersCubit>().autovalidateMode ,\n           child: Column(\n             mainAxisSize: MainAxisSize.min,\n             children: [\n               Row(\n@@ -73,19 +74,17 @@\n               ),\n               FormRow(\n                   text: 'Order Status:',\n                   widget: CustomDropdown(\n-                    hintText: 'Status',\n-                    initialValue:\n-                        context.read<OrdersCubit>().selectedOrderStatus,\n+                    hintText:  context.read<OrdersCubit>().selectedOrderStatus,\n+               \n                     items: context.read<OrdersCubit>().item,\n                     displayItem: (val) => val,\n                     onChanged: (newValue) {\n-                      context.read<OrdersCubit>().updateStatus(newValue ?? '');\n+                      context.read<OrdersCubit>().updatestatus(newValue ?? '');\n                     },\n                     validator: (value) {\n-                      validator(value, 'Please select status');\n-                      return null;\n+                    return  validator(value, 'Please select status');\n                     },\n                   )),\n               FormRow(\n                   text: 'Tracking URL:',\n"
                },
                {
                    "date": 1724066019534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     var size = MediaQuery.of(context).size;\n     return SingleChildScrollView(\n       child: Container(\n         padding: const EdgeInsets.all(defaultPadding),\n-        width: size.width * 0.5, // Adjust width based on screen size\n+        width: size.width , // Adjust width based on screen size\n         decoration: BoxDecoration(\n           color: bgColor,\n           borderRadius: BorderRadius.circular(12.0),\n           boxShadow: [\n"
                },
                {
                    "date": 1724066036148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     var size = MediaQuery.of(context).size;\n     return SingleChildScrollView(\n       child: Container(\n         padding: const EdgeInsets.all(defaultPadding),\n-        width: size.width , // Adjust width based on screen size\n+        width: size.width, // Adjust width based on screen size\n         decoration: BoxDecoration(\n           color: bgColor,\n           borderRadius: BorderRadius.circular(12.0),\n           boxShadow: [\n@@ -43,9 +43,9 @@\n           ],\n         ),\n         child: Form(\n           key: context.read<OrdersCubit>().orderFormKey,\n-          autovalidateMode:context.read<OrdersCubit>().autovalidateMode ,\n+          autovalidateMode: context.read<OrdersCubit>().autovalidateMode,\n           child: Column(\n             mainAxisSize: MainAxisSize.min,\n             children: [\n               Row(\n@@ -74,17 +74,16 @@\n               ),\n               FormRow(\n                   text: 'Order Status:',\n                   widget: CustomDropdown(\n-                    hintText:  context.read<OrdersCubit>().selectedOrderStatus,\n-               \n+                    hintText: context.read<OrdersCubit>().selectedOrderStatus,\n                     items: context.read<OrdersCubit>().item,\n                     displayItem: (val) => val,\n                     onChanged: (newValue) {\n                       context.read<OrdersCubit>().updatestatus(newValue ?? '');\n                     },\n                     validator: (value) {\n-                    return  validator(value, 'Please select status');\n+                      return validator(value, 'Please select status');\n                     },\n                   )),\n               FormRow(\n                   text: 'Tracking URL:',\n"
                },
                {
                    "date": 1724066070271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     var size = MediaQuery.of(context).size;\n     return SingleChildScrollView(\n       child: Container(\n         padding: const EdgeInsets.all(defaultPadding),\n-        width: size.width, // Adjust width based on screen size\n+        width: size.width * 0.5, // Adjust width based on screen size\n         decoration: BoxDecoration(\n           color: bgColor,\n           borderRadius: BorderRadius.circular(12.0),\n           boxShadow: [\n"
                },
                {
                    "date": 1724066949656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n import 'FormRow.dart';\n import 'addressSection.dart';\n import 'details_orders_bloc.dart';\n import 'paymentDetailsSection.dart';\n+import 'update_orders_bloc.dart';\n \n class OrderSubmitForm extends StatelessWidget {\n   final Datum order;\n \n@@ -97,9 +98,10 @@\n                 onPressed: () {\n                   context.read<OrdersCubit>().updateOrders(\n                       order.ordersId!, order.ordersUserid!, order.ordersType!);\n                 },\n-              )\n+              ),\n+          const    UpdateOrdersBlocListener()\n             ],\n           ),\n         ),\n       ),\n"
                }
            ],
            "date": 1723887746941,
            "name": "Commit-0",
            "content": "import 'package:untitled/models/response_orders/datum.dart';\n\nimport '../logic/cubit/orders_cubit.dart';\nimport '../../../../core/function/validator.dart';\nimport '../../../../widgets/RowBottomAdd.dart';\nimport 'package:flutter_bloc/flutter_bloc.dart';\n\nimport '../../../../utility/constants.dart';\n\nimport 'package:flutter/material.dart';\nimport 'package:gap/gap.dart';\nimport 'package:provider/provider.dart';\n\nimport '../../../../widgets/custom_dropdown.dart';\nimport '../../../../widgets/custom_text_field.dart';\nimport 'FormRow.dart';\nimport 'addressSection.dart';\nimport 'details_orders_bloc.dart';\nimport 'paymentDetailsSection.dart';\n\nclass OrderSubmitForm extends StatelessWidget {\n  final Datum order;\n\n  const OrderSubmitForm({super.key, required this.order});\n\n  @override\n  Widget build(BuildContext context) {\n    var size = MediaQuery.of(context).size;\n    return SingleChildScrollView(\n      child: Container(\n        padding: const EdgeInsets.all(defaultPadding),\n        width: size.width * 0.5, // Adjust width based on screen size\n        decoration: BoxDecoration(\n          color: bgColor,\n          borderRadius: BorderRadius.circular(12.0),\n          boxShadow: [\n            BoxShadow(\n              color: Colors.black.withOpacity(0.1),\n              spreadRadius: 5,\n              blurRadius: 7,\n              offset: const Offset(0, 3),\n            ),\n          ],\n        ),\n        child: Form(\n          key: context.read<OrdersCubit>().orderFormKey,\n          child: Column(\n            mainAxisSize: MainAxisSize.min,\n            children: [\n              Row(\n                children: [\n                  Expanded(\n                      child: FormRow(\n                          text: 'Name:',\n                          widget: Text(order.ordersUserid.toString(),\n                              style: const TextStyle(fontSize: 16)))),\n                  Expanded(\n                      child: FormRow(\n                          text: 'Order Id:',\n                          widget: Text(order.ordersId.toString(),\n                              style: const TextStyle(fontSize: 12)))),\n                ],\n              ),\n              DetailsBlocBuilder(\n                tatalPrice: order.orderToatalprice ?? 0,\n              ),\n              // ItemSection(\n              // totalPrice: order?.orderToatalprice ?? 0),\n              AddressSection(order: order),\n              const Gap(10),\n              PaymentDetailsSection(\n                order: order,\n              ),\n              FormRow(\n                  text: 'Order Status:',\n                  widget: CustomDropdown(\n                    hintText: 'Status',\n                    initialValue:\n                        context.read<OrdersCubit>().selectedOrderStatus,\n                    items: context.read<OrdersCubit>().item,\n                    displayItem: (val) => val,\n                    onChanged: (newValue) {\n                      context.read<OrdersCubit>().updatestatus(newValue ?? '');\n                    },\n                    validator: (value) {\n                      validator(value, 'Please select status');\n                      return null;\n                    },\n                  )),\n              FormRow(\n                  text: 'Tracking URL:',\n                  widget: CustomTextField(\n                    labelText: 'Tracking Url',\n                    onSave: (val) {},\n                    controller: context.read<OrdersCubit>().trackingUrlCtrl,\n                  )),\n              const Gap(defaultPadding * 2),\n              RowBotttomAdd(\n                onPressed: () {\n                  context.read<OrdersCubit>().updateOrders(\n                      order.ordersId!, order.ordersUserid!, order.ordersType!);\n                },\n              )\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}