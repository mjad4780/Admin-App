{
    "sourceFile": "lib/Future/Drawer/DashboardScreen/logic/cubit/dashboard_cubit.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1723829132240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723829702252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n import '../../../../../core/function/show_dilaog/AlertDialog.dart';\n import '../../../../../core/function/function_api/upload_image.dart';\n import '../../../../../models/Item.dart';\n-import '../../../../../models/response_items/datum.dart';\n+import '../../../../../models/response_dashpoard/datum.dart';\n import '../../../../../models/select_categories/select_categories.dart';\n import '../../data/repo.dart';\n import 'dashboard_state.dart';\n \n@@ -154,9 +154,9 @@\n     });\n   }\n \n   pushEdit(\n-    ItemsData items,\n+    ItemData items,\n   ) async {\n     selectedcolors?.clear();\n     selectedSize?.clear();\n \n"
                },
                {
                    "date": 1723830875028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,9 @@\n     });\n   }\n \n   pushEdit(\n-    ItemData items,\n+    Datum items,\n   ) async {\n     selectedcolors?.clear();\n     selectedSize?.clear();\n \n"
                }
            ],
            "date": 1723829132240,
            "name": "Commit-0",
            "content": "import 'dart:io';\n\nimport 'package:bloc/bloc.dart';\nimport 'package:flutter/material.dart';\nimport 'package:untitled/Future/Drawer/DashboardScreen/data/repo_get_dashboard.dart';\nimport 'package:untitled/core/function/function_api/ssend_list_api.dart';\n\nimport '../../../../../core/function/show_dilaog/AlertDialog.dart';\nimport '../../../../../core/function/function_api/upload_image.dart';\nimport '../../../../../models/Item.dart';\nimport '../../../../../models/response_items/datum.dart';\nimport '../../../../../models/select_categories/select_categories.dart';\nimport '../../data/repo.dart';\nimport 'dashboard_state.dart';\n\nclass DashboardCubit extends Cubit<DashboardState> {\n  DashboardCubit(this._itemrepo, this._dashboardRepo)\n      : super(const DashboardState.initial());\n\n  final ItemsRepo _itemrepo;\n  final DashboardRepo _dashboardRepo;\n\n////////////////Add/////////////////////////\n  TextEditingController name = TextEditingController();\n  TextEditingController namear = TextEditingController();\n  TextEditingController decs = TextEditingController();\n  TextEditingController decsar = TextEditingController();\n  TextEditingController count = TextEditingController();\n  TextEditingController price = TextEditingController();\n  TextEditingController discount = TextEditingController();\n  TextEditingController itemCategories = TextEditingController();\n  String active = '1';\n  List<SelectCategories> itemCat = [];\n  List<String>? selectedcolors = [];\n\n  List<String> colors = [\n    'red',\n    'orange',\n    'blue',\n    'black',\n  ];\n\n  List<String>? selectedSize = [];\n\n  List<String> sizes = [\n    'MM',\n    'ML',\n    'XXL',\n    'RM',\n  ];\n  List<String> oldimages = ['l', 'm'];\n\n  String? selestnamecategories;\n\n  GlobalKey<FormState> formkey = GlobalKey<FormState>();\n\n  AutovalidateMode autovalidateMode = AutovalidateMode.disabled;\n\n  File? selectedMainImage;\n  File? selectedSecondImage;\n  File? selectedThirdImage;\n  List<File> images = [];\n  String? oldemainimage;\n\n  // List<ItemsData> items = [];\n\n  /////////////////////////////////:AddItems///////////////////////////\n  addItems(BuildContext context) async {\n    if (selectedMainImage == null &&\n        selectedSecondImage == null &&\n        selectedThirdImage == null) {\n      return showMyDialog(context, \"erorr\", \"please choose image\");\n    }\n    if (formkey.currentState!.validate()) {\n      emit(const DashboardState.loadingAdd());\n      final response = await _itemrepo.addItems(\n          name.text,\n          namear.text,\n          selectedMainImage!,\n          decs.text,\n          decsar.text,\n          count.text,\n          active,\n          price.text,\n          discount.text,\n          itemCategories.text,\n          selectedSize!,\n          selectedcolors!,\n          images);\n      response.when(success: (data) {\n        emit(const DashboardState.successAdd());\n      }, failure: (error) {\n        emit(DashboardState.erorrAdd(erorr: error.messege!));\n      });\n    } else {\n      autovalidateMode = AutovalidateMode.always;\n    }\n  }\n\n  ///:editItems\n  editItems(int id) async {\n    emit(const DashboardState.loadingedit());\n    final response = await _itemrepo.editItems(\n        id,\n        name.text,\n        namear.text,\n        decs.text,\n        decsar.text,\n        count.text,\n        active,\n        price.text,\n        discount.text,\n        itemCategories.text,\n        selectedSize!,\n        selectedcolors!,\n        selectedMainImage,\n        oldimages,\n        images,\n        oldemainimage ?? '');\n    response.when(success: (data) {\n      emit(const DashboardState.successedit());\n    }, failure: (error) {\n      emit(DashboardState.erorredit(erorr: error.messege ?? ''));\n    });\n  }\n\n  ///:deleteItems\n  deleteItems(int id, String file) async {\n    emit(const DashboardState.loadingdelete());\n    final response = await _itemrepo.deleteItems(id, file);\n    response.when(success: (data) {\n      // items.removeWhere((element) => element.itemId == id);\n      emit(const DashboardState.successdelete());\n    }, failure: (error) {\n      emit(DashboardState.erorrdelete(erorr: error.messege ?? ''));\n    });\n  }\n\n  //:viewdashboard\n  viewashboard() async {\n    itemCat.clear();\n    emit(const DashboardState.loadingDashboard());\n    final response = await _dashboardRepo.viewdashboard();\n    response.when(success: (data) {\n      for (var i = 0; i < data.categories!.length; i++) {\n        itemCat.add(SelectCategories(\n          id: data.categories![i].categoriesId ?? 0,\n          name: data.categories![i].categoriesName ?? '',\n        ));\n      }\n      emit(DashboardState.successDashboard(data));\n    }, failure: (error) {\n      emit(DashboardState.erorrDashboard(erorr: error.messege!));\n    });\n  }\n\n  pushEdit(\n    ItemsData items,\n  ) async {\n    selectedcolors?.clear();\n    selectedSize?.clear();\n\n    var i1 = replacMapsColorIsEnpty(items.size!);\n    var i2 = replacMapsSizeIsEnpty(items.size!);\n    List<String> i3 = replacListIsEnpty(items.images!);\n    selectedMainImage = null;\n    selectedSecondImage = null;\n    selectedThirdImage = null;\n    name.text = items.itemName ?? '';\n    namear.text = items.itemNameAr ?? \"\";\n    decs.text = items.itemDecs ?? '';\n    decsar.text = items.itemDecsAr ?? \"\";\n    count.text = items.itemCount.toString();\n    active = items.itemActive.toString();\n    price.text = items.itemPrice.toString();\n    discount.text = items.itemDiscount.toString();\n    itemCategories.text = items.itemCategories.toString();\n    selestnamecategories = items.categoriesName;\n    oldimages = i3;\n    oldemainimage = items.itemImage;\n    // oldetwoimage = items.itemImage?[0];\n    // oldethreeimage = items.itemImage?[1];\n\n    for (var i = 0; i < i1.length; i++) {\n      selectedcolors!.add(i1[i].color!);\n    }\n    for (var i = 0; i < i2.length; i++) {\n      selectedSize!.add(i2[i].size!);\n    }\n    emit(const DashboardState.pushEdit());\n  }\n\n  ItemsModel? productForUpdate;\n\n  // XFile? mainImgXFile, secondImgXFile, thirdImgXFile;\n\n  // VariantType? variantTypeForUpdate;\n\n  int totalOrder = 10;\n  int pendingOrder = 4;\n  int processingOrder = 3;\n  int cancelledOrder = 2;\n  int shippedOrder = 6;\n  int deliveredOrder = 1;\n  ////////////////\n  int totalProduct = 4;\n  // totalProduct = 1;\n  int outOfStockProduct = 33;\n  int limitedStockProduct = 0;\n  int otherStockProduct = 1;\n  // totalOrder = pendingOrder + deliveredOrder + processingOrder + shippedOrder;\n\n  ///////////////////////////////function\n  void pickImage({\n    required int imageCardNumber,\n  }) async {\n    final File? image = await imageuploadgallery();\n    if (image != null) {\n      if (imageCardNumber == 1) {\n        selectedMainImage = image;\n\n        emit(const DashboardState.galer());\n      } else if (imageCardNumber == 2) {\n        // selectedSecondImage = File(image.path);\n        selectedSecondImage = image;\n        images.add(selectedSecondImage!);\n        emit(const DashboardState.galer2());\n      } else if (imageCardNumber == 3) {\n        // selectedThirdImage = File(image.path);\n        selectedThirdImage = image;\n        images.add(selectedThirdImage!);\n        emit(const DashboardState.galer3());\n      }\n      // emit(const DashboardState.galer());\n    }\n  }\n\n  hhhhhhh(int imageCardNumber) async {\n    if (imageCardNumber == 1) {\n      selectedMainImage = null;\n\n      emit(const DashboardState.remofgaler());\n    } else if (imageCardNumber == 2) {\n      // selectedSecondImage = File(image.path);\n      images.remove(selectedSecondImage!);\n      selectedSecondImage = null;\n\n      emit(const DashboardState.removegaler2());\n    } else if (imageCardNumber == 3) {\n      // selectedThirdImage = File(image.path);\n      images.remove(selectedThirdImage!);\n      selectedThirdImage = null;\n\n      emit(const DashboardState.removegaler3());\n    }\n  }\n\n  removeControlerpushAdd() {\n    name.clear();\n    namear.clear();\n    decs.clear();\n    decsar.clear();\n    count.clear();\n    price.clear();\n    discount.clear();\n    itemCategories.clear();\n    selestnamecategories = null;\n    selectedcolors?.clear();\n    selectedSize?.clear();\n    selectedMainImage = null;\n    oldemainimage = null;\n    images.clear();\n    oldimages = ['l', 'm'];\n\n    emit(const DashboardState.removeControll());\n  }\n}\n"
        }
    ]
}