{
    "sourceFile": "lib/Future/Drawer/DashboardScreen/data/repo.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1723829702235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1723829702235,
            "name": "Commit-0",
            "content": "import 'dart:io';\r\n\r\n\r\nimport '../../../../core/function/function_api/formDataPost.dart';\r\nimport '../../../../core/function/function_api/ssend_list_api.dart';\r\nimport '../../../../core/function/function_api/upload_image.dart';\r\nimport '../../../../core/networking/api_error_handler.dart';\r\nimport '../../../../core/networking/api_result.dart';\r\nimport '../../../../core/networking/api_service.dart';\r\n\r\nclass ItemsRepo {\r\n  final ApiService _apiService;\r\n\r\n  ItemsRepo(this._apiService);\r\n\r\n  Future<ApiResult<dynamic>> addimages(List<File>? images, List<String> old,\r\n      List<String> color, List<String> size) async {\r\n    Map<String, dynamic> data = {\r\n      // \"images[]\":\r\n      //     images!.isNotEmpty ? await uploadMultiImageSToAPI(images) : '',\r\n      \"old\": sendListApi(old.toString()),\r\n      \"color\": sendListApi(color.toString()),\r\n      \"size\": sendListApi(size.toString()),\r\n      \"quantity\": 40,\r\n    };\r\n    try {\r\n      final response = await _apiService.addimages(formDataPost(data));\r\n      return ApiResult.success(response);\r\n    } catch (e) {\r\n      return ApiResult.failure(ApiErrorHandler.handle(e));\r\n    }\r\n  }\r\n\r\n  //ViewItems\r\n\r\n\r\n\r\n  //AddItems\r\n\r\n  Future<ApiResult<dynamic>> addItems(\r\n    String name,\r\n    String namear,\r\n    File file,\r\n    String decs,\r\n    String decsar,\r\n    String count,\r\n    String active,\r\n    String price,\r\n    String discount,\r\n    String itemcategories,\r\n    List size,\r\n    List color,\r\n    List<File> images,\r\n  ) async {\r\n    Map<String, dynamic> data = {\r\n      \"name\": name,\r\n      \"namear\": namear,\r\n      \"decs\": decs,\r\n      \"decsar\": decsar,\r\n      \"count\": count,\r\n      \"active\": active,\r\n      \"price\": price,\r\n      \"discount\": discount,\r\n      \"itemcategories\": itemcategories,\r\n      \"size\": sendListApi(size.toString()) ?? [],\r\n      \"color\": sendListApi(color.toString()) ?? [],\r\n      \"images[]\": await uploadMultiImageSToAPI(images),\r\n      \"file\": await uploadImageToAPI(file)\r\n    };\r\n    try {\r\n      final response = await _apiService.addItems(formDataPost(data));\r\n      return ApiResult.success(response);\r\n    } catch (e) {\r\n      return ApiResult.failure(ApiErrorHandler.handle(e));\r\n    }\r\n  }\r\n\r\n  // Future<FormData> newMethod(List<File>? images) async {\r\n  //   FormData formDat = FormData();\r\n\r\n  //   for (var i = 0; i < images!.length; i++) {\r\n  //     String filename = images[i].path.split('/').last;\r\n\r\n  //     formDat.files.add(MapEntry('images[]',\r\n  //         await MultipartFile.fromFile(images[i].path, filename: filename)));\r\n  //   }\r\n  // }\r\n  //editItems\r\n\r\n  Future<ApiResult<dynamic>> editItems(\r\n      int id,\r\n      String name,\r\n      String namear,\r\n      String decs,\r\n      String decsar,\r\n      String count,\r\n      String active,\r\n      String price,\r\n      String discount,\r\n      String itemcategories,\r\n      List size,\r\n      List color,\r\n      File? file,\r\n      List? imageold,\r\n      List<File> images,\r\n      String mainoldimage) async {\r\n    Map<String, dynamic> data = {\r\n      \"id\": id,\r\n      \"name\": name,\r\n      \"namear\": namear,\r\n      \"decs\": decs,\r\n      \"decsar\": decsar,\r\n      \"count\": count,\r\n      \"active\": active,\r\n      \"price\": price,\r\n      \"discount\": discount,\r\n      \"itemcategories\": itemcategories,\r\n      \"imageold1\": mainoldimage,\r\n      \"size\": sendListApi(size.toString()) ?? [],\r\n      \"color\": sendListApi(color.toString()) ?? [],\r\n      \"imageold\": sendListApi(imageold.toString()) ?? [],\r\n      \"images[]\": images.isNotEmpty ? await uploadMultiImageSToAPI(images) : '',\r\n      \"file\": file != null ? await uploadImageToAPI(file) : ''\r\n    };\r\n\r\n    try {\r\n      final response = await _apiService.editItems(formDataPost(data));\r\n      return ApiResult.success(response);\r\n    } catch (e) {\r\n      return ApiResult.failure(ApiErrorHandler.handle(e));\r\n    }\r\n  }\r\n\r\n  //deleteItems\r\n\r\n  Future<ApiResult<dynamic>> deleteItems(int id, String file) async {\r\n    Map<String, dynamic> data = {\"id\": id, \"file\": file};\r\n\r\n    try {\r\n      final response = await _apiService.deleteItems(formDataPost(data));\r\n      return ApiResult.success(response);\r\n    } catch (e) {\r\n      return ApiResult.failure(ApiErrorHandler.handle(e));\r\n    }\r\n  }\r\n}\r\n"
        }
    ]
}