{
    "sourceFile": "lib/Future/Drawer/DashboardScreen/DashboardScreen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1723829132240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723829702260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import 'package:untitled/core/get_it/get_it.dart';\r\n \r\n+import '../../../models/response_dashpoard/datum.dart';\r\n import '../../../models/response_dashpoard/order.dart';\r\n-import '../../../models/response_items/datum.dart';\r\n import 'logic/cubit/dashboard_cubit.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n import 'package:gap/gap.dart';\r\n@@ -42,9 +42,9 @@\n     required this.order,\r\n     required this.items,\r\n   });\r\n   final Order order;\r\n-  final List<ItemsData> items;\r\n+  final List<ItemData> items;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Column(\r\n       children: [\r\n"
                },
                {
                    "date": 1723830875027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n     required this.order,\r\n     required this.items,\r\n   });\r\n   final Order order;\r\n-  final List<ItemData> items;\r\n+  final List<Datum> items;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Column(\r\n       children: [\r\n"
                }
            ],
            "date": 1723829132240,
            "name": "Commit-0",
            "content": "import 'package:untitled/core/get_it/get_it.dart';\r\n\r\n\r\nimport '../../../models/response_dashpoard/order.dart';\r\nimport '../../../models/response_items/datum.dart';\r\nimport 'logic/cubit/dashboard_cubit.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\nimport 'package:gap/gap.dart';\r\n\r\nimport '../../../utility/constants.dart';\r\nimport '../../../widgets/Heder.dart';\r\nimport 'widget/add_product_form.dart';\r\n\r\nimport 'widget/order_details_section.dart';\r\nimport 'widget/product_list_section.dart';\r\nimport 'widget/product_summery_section.dart';\r\nimport 'widget/show_add.dart';\r\nimport 'widget/view_dashbord/get_dashbord_bloc.dart';\r\n\r\nclass DashboardScreen extends StatelessWidget {\r\n  const DashboardScreen({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Builder(builder: (context) {\r\n      return BlocProvider(\r\n        create: (context) => getIt<DashboardCubit>()..viewashboard(),\r\n        child: const SafeArea(\r\n            child: SingleChildScrollView(\r\n          primary: false,\r\n          padding: EdgeInsets.all(defaultPadding),\r\n          child: DasboardBlocBuilder(),\r\n        )),\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nclass DashboardBody extends StatelessWidget {\r\n  const DashboardBody({\r\n    super.key,\r\n    required this.order,\r\n    required this.items,\r\n  });\r\n  final Order order;\r\n  final List<ItemsData> items;\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Column(\r\n      children: [\r\n        const Header(\r\n          title: 'Dashboard',\r\n        ),\r\n        const Gap(defaultPadding),\r\n        Row(\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          children: [\r\n            Expanded(\r\n              flex: 5,\r\n              child: Column(\r\n                children: [\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                    children: [\r\n                      Expanded(\r\n                        child: Text(\r\n                          \"My Products\",\r\n                          style: Theme.of(context).textTheme.titleMedium,\r\n                        ),\r\n                      ),\r\n                      Builder(builder: (context) {\r\n                        return ElevatedButton.icon(\r\n                          style: TextButton.styleFrom(\r\n                            padding: const EdgeInsets.symmetric(\r\n                              horizontal: defaultPadding * 1.5,\r\n                              vertical: defaultPadding,\r\n                            ),\r\n                          ),\r\n                          onPressed: () {\r\n                            context\r\n                                .read<DashboardCubit>()\r\n                                .removeControlerpushAdd();\r\n                            showAddProductForm(context, ProductSubmitForm(\r\n                              onPressed: () {\r\n                                context\r\n                                    .read<DashboardCubit>()\r\n                                    .addItems(context);\r\n                              },\r\n                            ));\r\n                          },\r\n                          icon: const Icon(Icons.add),\r\n                          label: const Text(\"Add New\"),\r\n                        );\r\n                      }),\r\n                      const Gap(20),\r\n                      IconButton(\r\n                          onPressed: () {\r\n                            context.read<DashboardCubit>().viewashboard();\r\n                            //TODO: should complete call getAllProduct\r\n                          },\r\n                          icon: const Icon(Icons.refresh)),\r\n                    ],\r\n                  ),\r\n                  const Gap(defaultPadding),\r\n                  const ProductSummerySection(),\r\n                  const Gap(defaultPadding),\r\n                  ProductListSection(\r\n                    items: items,\r\n                  ),\r\n\r\n                  /////////////////////   // const ItemsBlocBuilder(),\r\n                ],\r\n              ),\r\n            ),\r\n            const SizedBox(width: defaultPadding),\r\n            Expanded(\r\n              flex: 2,\r\n              child: OrderDetailsSection(\r\n                order: order,\r\n              ),\r\n            ),\r\n          ],\r\n        )\r\n      ],\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}